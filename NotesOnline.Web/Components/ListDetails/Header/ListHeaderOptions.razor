@using NotesOnline.Web.Services.Contracts;

<MudElement HtmlTag="div" Class="d-flex">
    <MudMenu 
        Icon="@Icons.Material.Filled.MoreVert" 
        Size="Size.Large" 
        Class="align-self-center"
        AnchorOrigin="Origin.BottomLeft">

        <MudMenuItem Class="mud-error-text" OnClick="() => Delete_Click()">Delete List</MudMenuItem>

    </MudMenu>
</MudElement>


@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    private ISListService? SListService { get; set; }

    [Inject]
    private NavigationManager? NavigationManager { get; set; }

    [Inject]
    private IDialogService? DialogService { get; set; }

    private async Task Delete_Click()
    {
        bool success = false;

        if (SListService is not null)
        {

            if (await ShowDeleteDialog())
            {
                success = await SListService.DeleteSList(Id);
            }
        }

        if (success && NavigationManager is not null)
        {
            NavigationManager.NavigateTo($"/");
        }
    }

    private async Task<bool> ShowDeleteDialog()
    {
        var userPressedDelete = false;

        if (DialogService is not null)
        {
            var parameters = new DialogParameters();
            parameters.Add("ContentText", "Are you sure you want to delete this list? This process cannot be undone.");
            parameters.Add("ButtonText", "Delete");
            parameters.Add("HeaderText", "Delete List");

            var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall, CloseOnEscapeKey = true };

            var dialog = DialogService.Show<ConfirmDangerDialog>("Delete", parameters, options);
            var result = await dialog.Result;

            userPressedDelete = !result.Cancelled;
        }

        return userPressedDelete;
    }
}
